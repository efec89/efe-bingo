{"ast":null,"code":"var _jsxFileName = \"/Users/efecomert/Desktop/AtlantisYeni/bingo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport useDynamicRefs from 'use-dynamic-refs';\nimport Ripples from 'react-ripples';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nconst bingo = [\"(child noises in the background)\", \"Hello, hello?\", \"i need to jump in another call\", \"can everyone go on mute\", \"could you please get closer to the mic\", \"(load painful echo / feedback)\", \"Next slide, please.\", \"can we take this offline?\", \"is ___ on the call?\", \"Could you share this slides afterwards?\", \"can somebody grant presenter rights?\", \"can you email that to everyone?\", \"BİNGO\", \"sorry, i had problems loging in\", \"(animal noises in the background)\", \"Sorry, i didn’t found the conference id\", \"i was having connection issues\", \"i’ll have to get back to you\", \"who just joined?\", \"sorry, somehting ___ with my calenar\", \"do you see my screen?\", \"lets wait for ___!\", \"You will send the minutes?\", \"sorry was on the mute.\", \"can you repeat please?\"];\n\nfunction App() {\n  _s();\n\n  let [state, setState] = React.useState({\n    viewPort: null\n  });\n  let homeDiv = React.useRef(null);\n  let squareDiv = React.useRef(bingo.map(() => /*#__PURE__*/React.createRef()));\n  const [getRef, setRef] = useDynamicRefs();\n\n  const clicked = num => {\n    console.log(\"num: \" + num);\n  };\n\n  React.useEffect(() => {\n    const reportWindowSize = _.throttle(() => {\n      console.log(`Window size: ${window.innerWidth} x ${window.innerHeight}`);\n      setState({\n        viewPort: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      });\n    }, 100);\n\n    reportWindowSize();\n    window.addEventListener('resize', reportWindowSize);\n    return () => {\n      window.removeEventListener('resize', reportWindowSize);\n    };\n  }, []);\n  React.useEffect(() => {\n    if (state.viewPort) {\n      let n = Math.min(state.viewPort.height, state.viewPort.width);\n      homeDiv.current.style.height = `${n - 40}px`;\n      homeDiv.current.style.width = `${n - 40}px`;\n\n      for (let i = 0; i < 25; i++) {\n        const id = getRef(\"square_\" + i);\n        id.current.style.height = `${(n - 40) / 5}px`;\n        id.current.style.width = `${(n - 40) / 5}px`;\n        let font_size = Math.max(Math.floor(n / 60), 10) + 'px';\n        id.current.style.fontSize = font_size;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      ref: homeDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), bingo.map((item, i) => /*#__PURE__*/_jsxDEV(Ripples, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"BingoSquare\",\n          ref: setRef(\"square_\" + i),\n          onClick: event => clicked(i),\n          children: [item, /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"SquareNumber\",\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"iHaFTq+onZdEiMYA/SZQR/1rBjM=\", false, function () {\n  return [useDynamicRefs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/efecomert/Desktop/AtlantisYeni/bingo/src/App.js"],"names":["logo","React","useDynamicRefs","Ripples","_","require","bingo","App","state","setState","useState","viewPort","homeDiv","useRef","squareDiv","map","createRef","getRef","setRef","clicked","num","console","log","useEffect","reportWindowSize","throttle","window","innerWidth","innerHeight","width","height","addEventListener","removeEventListener","n","Math","min","current","style","i","id","font_size","max","floor","fontSize","item","event"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport useDynamicRefs from 'use-dynamic-refs';\nimport Ripples from 'react-ripples'\n\nconst _ = require('lodash');\n\nconst bingo = [\n  \"(child noises in the background)\",\n  \"Hello, hello?\",\n  \"i need to jump in another call\",\n  \"can everyone go on mute\",\n  \"could you please get closer to the mic\",\n  \"(load painful echo / feedback)\",\n  \"Next slide, please.\",\n  \"can we take this offline?\",\n  \"is ___ on the call?\",\n  \"Could you share this slides afterwards?\",\n  \"can somebody grant presenter rights?\",\n  \"can you email that to everyone?\",\n  \"BİNGO\",\n  \"sorry, i had problems loging in\",\n  \"(animal noises in the background)\",\n  \"Sorry, i didn’t found the conference id\",\n  \"i was having connection issues\",\n  \"i’ll have to get back to you\",\n  \"who just joined?\",\n  \"sorry, somehting ___ with my calenar\",\n  \"do you see my screen?\",\n  \"lets wait for ___!\",\n  \"You will send the minutes?\",\n  \"sorry was on the mute.\",\n  \"can you repeat please?\"\n]\n\nfunction App() {\n\n  let [state, setState] = React.useState({viewPort: null});\n  let homeDiv = React.useRef(null);\n  let squareDiv = React.useRef(bingo.map(() => React.createRef()));\n  const [getRef, setRef] =  useDynamicRefs();\n\n\n  const clicked  = (num) => {\n\n    console.log(\"num: \" +num)\n  }\n\n  React.useEffect(() => {\n    const reportWindowSize = _.throttle(() => {\n      console.log(`Window size: ${window.innerWidth} x ${window.innerHeight}`);\n      setState({viewPort: {width: window.innerWidth, height: window.innerHeight}});\n    }, 100);\n\n    reportWindowSize();\n    window.addEventListener('resize', reportWindowSize);\n\n    return () => {window.removeEventListener('resize', reportWindowSize);}\n  }, []);\n\n  React.useEffect(() => {\n    if (state.viewPort) {\n      let n = Math.min(state.viewPort.height, state.viewPort.width);\n      homeDiv.current.style.height = `${n-40}px`;\n      homeDiv.current.style.width = `${n-40}px`;\n      for(let i=0; i<25; i++){\n        const id = getRef(\"square_\"+i);\n        id.current.style.height = `${(n-40)/5}px`;\n        id.current.style.width = `${(n-40)/5}px`;\n        let font_size = Math.max(Math.floor(n/60),10)+'px';\n\n        id.current.style.fontSize = font_size;\n      }\n\n\n\n    }\n  });\n\n  return (\n      <div className=\"Main\">\n        <div className=\"App\" ref={homeDiv}>\n          <div className=\"side top\"></div>\n          {\n            bingo.map((item, i ) =>\n                <Ripples key={i}>\n                  <button className=\"BingoSquare\" ref={setRef(\"square_\"+i)} onClick={(event) => clicked(i)}>\n                    {item}\n                    <p className=\"SquareNumber\">{i}</p>\n                  </button>\n                </Ripples>\n            )\n          }\n        </div>\n        <div className=\"right\"></div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}