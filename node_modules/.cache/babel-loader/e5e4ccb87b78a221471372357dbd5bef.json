{"ast":null,"code":"var _jsxFileName = \"/Users/efecomert/Desktop/AtlantisYeni/bingo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport useDynamicRefs from 'use-dynamic-refs';\nimport Ripples from 'react-ripples';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst _ = require('lodash');\n\nlet bingo = [\"(child noises in the background)\", \"Hello, hello?\", \"i need to jump in another call\", \"can everyone go on mute\", \"could you please get closer to the mic\", \"(load painful echo / feedback)\", \"Next slide, please.\", \"can we take this offline?\", \"is ___ on the call?\", \"Could you share this slides afterwards?\", \"can somebody grant presenter rights?\", \"can you email that to everyone?\", \"sorry, i had problems loging in\", \"(animal noises in the background)\", \"Sorry, i didn’t found the conference id\", \"i was having connection issues\", \"i’ll have to get back to you\", \"who just joined?\", \"sorry, somehting ___ with my calenar\", \"do you see my screen?\", \"lets wait for ___!\", \"You will send the minutes?\", \"sorry was on the mute.\", \"can you repeat please?\"];\n\nfunction App() {\n  _s();\n\n  let [state, setState] = React.useState({\n    viewPort: null\n  });\n  let [gameObjects, setGameObjects] = React.useState([]);\n  let homeDiv = React.useRef(null);\n  let squareDiv = React.useRef(bingo.map(() => /*#__PURE__*/React.createRef()));\n  const [getRef, setRef] = useDynamicRefs();\n\n  function createGame() {\n    console.log(\"Game Created\"); //Firstly shuffling the array\n\n    bingo = bingo.map(value => ({\n      value,\n      sort: Math.random()\n    })).sort((a, b) => a.sort - b.sort).map(_ref => {\n      let {\n        value\n      } = _ref;\n      return value;\n    }); //Then creating objects and adding to state\n\n    let objects = [];\n\n    for (let i = 0; i < bingo.length; i++) {\n      if (i == 12) {\n        //12. Element is free BINGO\n        objects.push({\n          name: \"BINGO!\",\n          checked: true,\n          correct: false,\n          bingo: true\n        });\n      }\n\n      objects.push({\n        name: bingo[i],\n        checked: false,\n        correct: false,\n        bingo: false\n      });\n    }\n\n    setGameObjects(objects);\n  }\n\n  const clicked = num => {\n    let obj = gameObjects;\n    console.log(\"Clicked: \" + num + \" -> \" + JSON.stringify(obj[num]));\n\n    if (obj[num].checked) {\n      return;\n    }\n\n    obj[num].checked = true;\n    setGameObjects(obj);\n    setGameObjects([...gameObjects]);\n  };\n\n  function checkRow() {\n    for (let row = 0; row < 5; row++) {\n      let completed = true;\n\n      for (let col = 0; col < 5; col++) {\n        if (!gameObjects[row + col].checked) {\n          completed = false;\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    createGame();\n  }, []);\n  React.useEffect(() => {\n    const reportWindowSize = _.throttle(() => {\n      console.log(`Window size: ${window.innerWidth} x ${window.innerHeight}`);\n      setState({\n        viewPort: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      });\n    }, 100);\n\n    reportWindowSize();\n    window.addEventListener('resize', reportWindowSize);\n    return () => {\n      window.removeEventListener('resize', reportWindowSize);\n    };\n  }, []);\n  React.useEffect(() => {\n    if (state.viewPort) {\n      let n = Math.min(state.viewPort.height, state.viewPort.width);\n      homeDiv.current.style.height = `${n - 40}px`;\n      homeDiv.current.style.width = `${n - 40}px`;\n\n      for (let i = 0; i < gameObjects.length; i++) {\n        const id = getRef(\"square_\" + i);\n\n        if (id.current) {\n          id.current.style.height = `${(n - 40) / 5}px`;\n          id.current.style.width = `${(n - 40) / 5}px`;\n          let font_size = Math.max(Math.floor(n / 60), 10);\n\n          if (i == 12) {\n            font_size += 8;\n          }\n\n          id.current.style.fontSize = font_size + 'px';\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      ref: homeDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), gameObjects.map((item, i) => {\n        let itemClass = \"Square\";\n\n        if (item.bingo) {\n          itemClass = \"Square Bingo\";\n        } else {\n          if (item.checked) {\n            itemClass = \"Square Selected\";\n          } else if (item.correct) {\n            itemClass = \"Square Correct\";\n          }\n        }\n\n        return /*#__PURE__*/_jsxDEV(Ripples, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: itemClass,\n            disabled: item.bingo ? true : false,\n            ref: setRef(\"square_\" + i),\n            onClick: event => clicked(i),\n            children: [item.name, /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"SquareNumber\",\n              children: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"8nlLS5dAFNkAbGBldxLBWBjZQeo=\", false, function () {\n  return [useDynamicRefs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/efecomert/Desktop/AtlantisYeni/bingo/src/App.js"],"names":["logo","React","useDynamicRefs","Ripples","_","require","bingo","App","state","setState","useState","viewPort","gameObjects","setGameObjects","homeDiv","useRef","squareDiv","map","createRef","getRef","setRef","createGame","console","log","value","sort","Math","random","a","b","objects","i","length","push","name","checked","correct","clicked","num","obj","JSON","stringify","checkRow","row","completed","col","useEffect","reportWindowSize","throttle","window","innerWidth","innerHeight","width","height","addEventListener","removeEventListener","n","min","current","style","id","font_size","max","floor","fontSize","item","itemClass","event"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAIC,KAAK,GAAG,CACV,kCADU,EAEV,eAFU,EAGV,gCAHU,EAIV,yBAJU,EAKV,wCALU,EAMV,gCANU,EAOV,qBAPU,EAQV,2BARU,EASV,qBATU,EAUV,yCAVU,EAWV,sCAXU,EAYV,iCAZU,EAaV,iCAbU,EAcV,mCAdU,EAeV,yCAfU,EAgBV,gCAhBU,EAiBV,8BAjBU,EAkBV,kBAlBU,EAmBV,sCAnBU,EAoBV,uBApBU,EAqBV,oBArBU,EAsBV,4BAtBU,EAuBV,wBAvBU,EAwBV,wBAxBU,CAAZ;;AA2BA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAAf,CAAxB;AACA,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACS,QAAN,CAAe,EAAf,CAApC;AACA,MAAII,OAAO,GAAGb,KAAK,CAACc,MAAN,CAAa,IAAb,CAAd;AACA,MAAIC,SAAS,GAAGf,KAAK,CAACc,MAAN,CAAaT,KAAK,CAACW,GAAN,CAAU,mBAAMhB,KAAK,CAACiB,SAAN,EAAhB,CAAb,CAAhB;AACA,QAAM,CAACC,MAAD,EAASC,MAAT,IAAoBlB,cAAc,EAAxC;;AAGA,WAASmB,UAAT,GAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADmB,CAEnB;;AACAjB,IAAAA,KAAK,GAAGA,KAAK,CACRW,GADG,CACCO,KAAK,KAAK;AAAEA,MAAAA,KAAF;AAASC,MAAAA,IAAI,EAAEC,IAAI,CAACC,MAAL;AAAf,KAAL,CADN,EAEHF,IAFG,CAEE,CAACG,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,IAAF,GAASI,CAAC,CAACJ,IAFvB,EAGHR,GAHG,CAGC;AAAA,UAAC;AAAEO,QAAAA;AAAF,OAAD;AAAA,aAAeA,KAAf;AAAA,KAHD,CAAR,CAHmB,CAQnB;;AACA,QAAIM,OAAO,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACzB,KAAK,CAAC0B,MAArB,EAA6BD,CAAC,EAA9B,EAAiC;AAC/B,UAAGA,CAAC,IAAI,EAAR,EAAY;AACV;AACAD,QAAAA,OAAO,CAACG,IAAR,CAAa;AAACC,UAAAA,IAAI,EAAE,QAAP;AAAiBC,UAAAA,OAAO,EAAE,IAA1B;AAAgCC,UAAAA,OAAO,EAAE,KAAzC;AAAgD9B,UAAAA,KAAK,EAAE;AAAvD,SAAb;AACD;;AACDwB,MAAAA,OAAO,CAACG,IAAR,CAAa;AAACC,QAAAA,IAAI,EAAE5B,KAAK,CAACyB,CAAD,CAAZ;AAAiBI,QAAAA,OAAO,EAAE,KAA1B;AAAiCC,QAAAA,OAAO,EAAE,KAA1C;AAAiD9B,QAAAA,KAAK,EAAE;AAAxD,OAAb;AACD;;AACDO,IAAAA,cAAc,CAACiB,OAAD,CAAd;AACD;;AAED,QAAMO,OAAO,GAAKC,GAAD,IAAS;AACxB,QAAIC,GAAG,GAAG3B,WAAV;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAae,GAAb,GAAmB,MAAnB,GAA4BE,IAAI,CAACC,SAAL,CAAeF,GAAG,CAACD,GAAD,CAAlB,CAAxC;;AAEA,QAAGC,GAAG,CAACD,GAAD,CAAH,CAASH,OAAZ,EAAoB;AAClB;AACD;;AACDI,IAAAA,GAAG,CAACD,GAAD,CAAH,CAASH,OAAT,GAAmB,IAAnB;AAGAtB,IAAAA,cAAc,CAAC0B,GAAD,CAAd;AACA1B,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,CAAD,CAAd;AACD,GAZD;;AAcA,WAAS8B,QAAT,GAAmB;AACjB,SAAI,IAAIC,GAAG,GAAC,CAAZ,EAAeA,GAAG,GAAC,CAAnB,EAAsBA,GAAG,EAAzB,EAA4B;AAC1B,UAAIC,SAAS,GAAG,IAAhB;;AACA,WAAI,IAAIC,GAAG,GAAC,CAAZ,EAAeA,GAAG,GAAC,CAAnB,EAAsBA,GAAG,EAAzB,EAA4B;AAC1B,YAAG,CAACjC,WAAW,CAAC+B,GAAG,GAACE,GAAL,CAAX,CAAqBV,OAAzB,EAAiC;AAC/BS,UAAAA,SAAS,GAAG,KAAZ;AACD;AACF;AACF;AACF;;AAED3C,EAAAA,KAAK,CAAC6C,SAAN,CAAgB,MAAM;AACpBzB,IAAAA,UAAU;AACX,GAFD,EAEG,EAFH;AAIApB,EAAAA,KAAK,CAAC6C,SAAN,CAAgB,MAAM;AACpB,UAAMC,gBAAgB,GAAG3C,CAAC,CAAC4C,QAAF,CAAW,MAAM;AACxC1B,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAe0B,MAAM,CAACC,UAAW,MAAKD,MAAM,CAACE,WAAY,EAAtE;AACA1C,MAAAA,QAAQ,CAAC;AAACE,QAAAA,QAAQ,EAAE;AAACyC,UAAAA,KAAK,EAAEH,MAAM,CAACC,UAAf;AAA2BG,UAAAA,MAAM,EAAEJ,MAAM,CAACE;AAA1C;AAAX,OAAD,CAAR;AACD,KAHwB,EAGtB,GAHsB,CAAzB;;AAKAJ,IAAAA,gBAAgB;AAChBE,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCP,gBAAlC;AAEA,WAAO,MAAM;AAACE,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCR,gBAArC;AAAwD,KAAtE;AACD,GAVD,EAUG,EAVH;AAYA9C,EAAAA,KAAK,CAAC6C,SAAN,CAAgB,MAAM;AACpB,QAAItC,KAAK,CAACG,QAAV,EAAoB;AAClB,UAAI6C,CAAC,GAAG9B,IAAI,CAAC+B,GAAL,CAASjD,KAAK,CAACG,QAAN,CAAe0C,MAAxB,EAAgC7C,KAAK,CAACG,QAAN,CAAeyC,KAA/C,CAAR;AACAtC,MAAAA,OAAO,CAAC4C,OAAR,CAAgBC,KAAhB,CAAsBN,MAAtB,GAAgC,GAAEG,CAAC,GAAC,EAAG,IAAvC;AACA1C,MAAAA,OAAO,CAAC4C,OAAR,CAAgBC,KAAhB,CAAsBP,KAAtB,GAA+B,GAAEI,CAAC,GAAC,EAAG,IAAtC;;AACA,WAAI,IAAIzB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACnB,WAAW,CAACoB,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAM6B,EAAE,GAAGzC,MAAM,CAAC,YAAUY,CAAX,CAAjB;;AACA,YAAG6B,EAAE,CAACF,OAAN,EAAc;AACZE,UAAAA,EAAE,CAACF,OAAH,CAAWC,KAAX,CAAiBN,MAAjB,GAA2B,GAAE,CAACG,CAAC,GAAC,EAAH,IAAO,CAAE,IAAtC;AACAI,UAAAA,EAAE,CAACF,OAAH,CAAWC,KAAX,CAAiBP,KAAjB,GAA0B,GAAE,CAACI,CAAC,GAAC,EAAH,IAAO,CAAE,IAArC;AAEA,cAAIK,SAAS,GAAGnC,IAAI,CAACoC,GAAL,CAASpC,IAAI,CAACqC,KAAL,CAAWP,CAAC,GAAC,EAAb,CAAT,EAA0B,EAA1B,CAAhB;;AACA,cAAGzB,CAAC,IAAI,EAAR,EAAW;AACT8B,YAAAA,SAAS,IAAI,CAAb;AACD;;AACDD,UAAAA,EAAE,CAACF,OAAH,CAAWC,KAAX,CAAiBK,QAAjB,GAA4BH,SAAS,GAAC,IAAtC;AACD;AACF;AACF;AACF,GAnBD;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAE/C,OAA1B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,EAIIF,WAAW,CAACK,GAAZ,CAAgB,CAACgD,IAAD,EAAOlC,CAAP,KAAa;AAC3B,YAAImC,SAAS,GAAG,QAAhB;;AACA,YAAGD,IAAI,CAAC3D,KAAR,EAAc;AACZ4D,UAAAA,SAAS,GAAG,cAAZ;AACD,SAFD,MAEK;AACH,cAAGD,IAAI,CAAC9B,OAAR,EAAgB;AACd+B,YAAAA,SAAS,GAAG,iBAAZ;AACD,WAFD,MAEM,IAAGD,IAAI,CAAC7B,OAAR,EAAgB;AACpB8B,YAAAA,SAAS,GAAG,gBAAZ;AACD;AACF;;AACD,4BACE,QAAC,OAAD;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAEA,SAAnB;AAA8B,YAAA,QAAQ,EAAED,IAAI,CAAC3D,KAAL,GAAW,IAAX,GAAgB,KAAxD;AAA+D,YAAA,GAAG,EAAEc,MAAM,CAAC,YAAYW,CAAb,CAA1E;AAA2F,YAAA,OAAO,EAAGoC,KAAD,IAAW9B,OAAO,CAACN,CAAD,CAAtH;AAAA,uBACGkC,IAAI,CAAC/B,IADR,eAEE;AAAG,cAAA,SAAS,EAAC,cAAb;AAAA,wBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAcA,CAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAnBD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BD;;GAxHQxB,G;UAKmBL,c;;;KALnBK,G;AA0HT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport useDynamicRefs from 'use-dynamic-refs';\nimport Ripples from 'react-ripples'\n\nconst _ = require('lodash');\n\nlet bingo = [\n  \"(child noises in the background)\",\n  \"Hello, hello?\",\n  \"i need to jump in another call\",\n  \"can everyone go on mute\",\n  \"could you please get closer to the mic\",\n  \"(load painful echo / feedback)\",\n  \"Next slide, please.\",\n  \"can we take this offline?\",\n  \"is ___ on the call?\",\n  \"Could you share this slides afterwards?\",\n  \"can somebody grant presenter rights?\",\n  \"can you email that to everyone?\",\n  \"sorry, i had problems loging in\",\n  \"(animal noises in the background)\",\n  \"Sorry, i didn’t found the conference id\",\n  \"i was having connection issues\",\n  \"i’ll have to get back to you\",\n  \"who just joined?\",\n  \"sorry, somehting ___ with my calenar\",\n  \"do you see my screen?\",\n  \"lets wait for ___!\",\n  \"You will send the minutes?\",\n  \"sorry was on the mute.\",\n  \"can you repeat please?\"\n]\n\nfunction App() {\n  let [state, setState] = React.useState({viewPort: null});\n  let [gameObjects, setGameObjects] = React.useState([]);\n  let homeDiv = React.useRef(null);\n  let squareDiv = React.useRef(bingo.map(() => React.createRef()));\n  const [getRef, setRef] =  useDynamicRefs();\n\n\n  function createGame(){\n    console.log(\"Game Created\")\n    //Firstly shuffling the array\n    bingo = bingo\n        .map(value => ({ value, sort: Math.random() }))\n        .sort((a, b) => a.sort - b.sort)\n        .map(({ value }) => value)\n\n    //Then creating objects and adding to state\n    let objects = [];\n    for(let i=0; i<bingo.length; i++){\n      if(i == 12) {\n        //12. Element is free BINGO\n        objects.push({name: \"BINGO!\", checked: true, correct: false, bingo: true})\n      }\n      objects.push({name: bingo[i], checked: false, correct: false, bingo: false})\n    }\n    setGameObjects(objects);\n  }\n\n  const clicked  = (num) => {\n    let obj = gameObjects;\n    console.log(\"Clicked: \" +num + \" -> \" + JSON.stringify(obj[num]));\n\n    if(obj[num].checked){\n      return;\n    }\n    obj[num].checked = true;\n\n\n    setGameObjects(obj);\n    setGameObjects([...gameObjects]);\n  }\n\n  function checkRow(){\n    for(let row=0; row<5; row++){\n      let completed = true;\n      for(let col=0; col<5; col++){\n        if(!gameObjects[row+col].checked){\n          completed = false;\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    createGame();\n  }, [])\n\n  React.useEffect(() => {\n    const reportWindowSize = _.throttle(() => {\n      console.log(`Window size: ${window.innerWidth} x ${window.innerHeight}`);\n      setState({viewPort: {width: window.innerWidth, height: window.innerHeight}});\n    }, 100);\n\n    reportWindowSize();\n    window.addEventListener('resize', reportWindowSize);\n\n    return () => {window.removeEventListener('resize', reportWindowSize);}\n  }, []);\n\n  React.useEffect(() => {\n    if (state.viewPort) {\n      let n = Math.min(state.viewPort.height, state.viewPort.width);\n      homeDiv.current.style.height = `${n-40}px`;\n      homeDiv.current.style.width = `${n-40}px`;\n      for(let i=0; i<gameObjects.length; i++){\n        const id = getRef(\"square_\"+i);\n        if(id.current){\n          id.current.style.height = `${(n-40)/5}px`;\n          id.current.style.width = `${(n-40)/5}px`;\n\n          let font_size = Math.max(Math.floor(n/60),10);\n          if(i == 12){\n            font_size += 8;\n          }\n          id.current.style.fontSize = font_size+'px';\n        }\n      }\n    }\n  });\n\n  return (\n      <div className=\"Main\">\n          <div className=\"App\" ref={homeDiv}>\n            <div className=\"top\"></div>\n            <div className=\"right\"></div>\n            {\n              gameObjects.map((item, i) => {\n                let itemClass = \"Square\";\n                if(item.bingo){\n                  itemClass = \"Square Bingo\";\n                }else{\n                  if(item.checked){\n                    itemClass = \"Square Selected\";\n                  }else if(item.correct){\n                    itemClass = \"Square Correct\";\n                  }\n                }\n                return (\n                  <Ripples key={i}>\n                    <button className={itemClass} disabled={item.bingo?true:false} ref={setRef(\"square_\" + i)} onClick={(event) => clicked(i)}>\n                      {item.name}\n                      <p className=\"SquareNumber\">{i}</p>\n                    </button>\n                  </Ripples>\n                );\n              })\n            }\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}